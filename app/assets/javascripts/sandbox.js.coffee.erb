<% environment.context_class.instance_eval { include Rails.application.routes.url_helpers } %>

class window.VoyageX.Sandbox

  @_SINGLETON = null

  constructor: () ->
    Sandbox._SINGLETON = this

  @instance: () ->
    unless Sandbox._SINGLETON?
      Sandbox._SINGLETON = new Sandbox()
    Sandbox._SINGLETON
  
  toggleHomeTab: (selected) ->
    if selected.value == 'administration'
      $('#content_help').css('display', 'none')
      $('#administration').css('display', 'block')
      $('#stats').css('display', 'none')
    else if selected.value == 'help'
      $('#content_help').css('display', 'block')
      $('#administration').css('display', 'none')
      $('#stats').css('display', 'none')
    else
      $('#content_help').css('display', 'none')
      $('#administration').css('display', 'none')
      $('#stats').css('display', 'block')

  toggleSearchRadiusDisplay: (selected) ->
    if selected.id == 'search_radius_display_show'
      window.showSearchRadius = true
      #VoyageX.Main.markerManager()._showSearchRadius = true
      VoyageX.Main.markerManager().searchBounds(VoyageX.SEARCH_RADIUS_METERS, APP.map())
    else
      window.showSearchRadius = false
      #VoyageX.Main.markerManager()._showSearchRadius = false
      VoyageX.Main.markerManager().searchBounds(0, APP.map())

  toggleNetworkState: (selected) ->
    if selected.id == 'network_state_online'
      APP.setOnline()
      Comm.StorageController.instance()._tileLoadQueue = {}
      APP.map()._resetView APP.map().getCenter(), APP.map().getZoom(), true
    else
      APP.setOffline()

  toogleUserFotoUpload: () ->
    if $('#user_foto_input_container').css('display') == 'none'
      $('#whoami_img_container').css('display', 'none')
      $('#user_foto_input_container').css('display', 'block')
    else
      $('#whoami_img_container').css('display', 'block')
      $('#user_foto_input_container').css('display', 'none')

jQuery ->
  #window.markerManager = null

  #comm = null
  
  window.toggleHomeTab = (selected) ->
    VoyageX.Sandbox.instance().toggleHomeTab selected

  window.toggleSearchRadiusDisplay = (selected) ->
    VoyageX.Sandbox.instance().toggleSearchRadiusDisplay selected

  window.toggleNetworkState = (selected) ->
    VoyageX.Sandbox.instance().toggleNetworkState selected

  window.toogleUserFotoUpload = () ->
    VoyageX.Sandbox.instance().toogleUserFotoUpload()
