<% environment.context_class.instance_eval { include Rails.application.routes.url_helpers } %>

jQuery ->
  window.toggleUploadType = (selected) ->
    if selected.value == 'file'
      $('#upload_cam_container').css('display', 'none')
      $('#upload_file_controls').css('display', 'block')
    else
      $('#upload_cam_container').css('display', 'block')
      $('#upload_file_controls').css('display', 'none')

  curSelVidSrcIdx = 0
  switchCamera = () ->
    if selectedCameraActive
      stopCurrentVideo()
    curSelVidSrcIdx = mediaManager.nextSelectedVideoSrcIdx()
    takePhoto()

  uploadPhoto = () ->
    selLatLng = APP.getSelectedPositionLatLng()
    $("#location_latitude").val(selLatLng[0])
    $("#location_longitude").val(selLatLng[1])
    $("#upload_comment_text").val($("#upload_comment").val())
    Storage.Model.instance().savePoiNote 'upload_form', afterUploadPhoto

  uploadPhoto64 = () ->
    selLatLng = APP.getSelectedPositionLatLng()
    fileContentType = $('#media_input_current').attr('src').match(/^data:([^;]+)/)[1]
    fileData = $('#media_input_current').attr('src').replace(/^data:image\/.+?base64,/,'')
    data = { location: { latitude: selLatLng[0], longitude: selLatLng[1] },\
             file_comment: $('#upload_comment').val(),\
             file_data: fileData,\
             file_content_type: fileContentType }
    uploadIdMatch = $('#upload_form').attr('action').match(/^\/[^\/]+\/([0-9]+)/)
    if uploadIdMatch?
      Storage.Model.instance().savePoiNote64 data, afterUploadPhoto, uploadIdMatch[1]
    else
      Storage.Model.instance().savePoiNote64 data, afterUploadPhoto

  window.afterUploadPhoto = (poi) ->
    # @see upload_comments.js.coffee
    if $.mobile
#     if $('#upload_comment_conrols').hasClass('ui-popup-active')
#       $('#upload_comment_conrols').removeClass('ui-popup-active').addClass('ui-popup-hidden')
#     $('#upload_comment_cancel').click()
      $("#upload_data_panel").panel("close")
    else
      uploadDataDialog.dialog("close")
    APP.panPosition poi.lat, poi.lng, poi.address
    VoyageX.View.addPoiNotes poi
    

#  $('#add_upload_comment_btn').on 'click', (event) ->
#    upload_id = $('#add_upload_comment_upload_id').val()
#    $.ajax
#      type: 'POST'
#      dataType: 'script'
#      url: '<-%= create_upload_comment_path(upload_id: '') %>'+upload_id
#      data: { _method: 'put',\
#              user_id: APP.userId(),\
#              text: $('#add_upload_comment_text').val() }
#    $('#add_upload_comment_text').val('')
#    #$("#upload_comment_conrols").css('display', 'none')
#    if window.isMobile()
#      #if $('#upload_comment_conrols').hasClass('ui-popup-active')
#      #  $('#upload_comment_conrols').removeClass('ui-popup-active').addClass('ui-popup-hidden')
#      $('#upload_comment_cancel').click()
#    else
#      uploadCommentDialog.dialog("close")
    
  $(document).on 'click', '#upload_button', (event) ->
    uploadPhoto()
    
  $(document).on 'click', '#media_input_upload_btn', (event) ->
    uploadPhoto64()

  if $.mobile
    $(document).on 'click', '.show-page-loading-msg', () ->
      $this = $( this )
      theme = $this.jqmData( "theme" ) || $.mobile.loader.prototype.options.theme
      msgText = $this.jqmData( "msgtext" ) || $.mobile.loader.prototype.options.text
      textVisible = $this.jqmData( "textvisible" ) || $.mobile.loader.prototype.options.textVisible
      textonly = !!$this.jqmData( "textonly" )
      html = $this.jqmData( "html" ) || ""

      $.mobile.loading( 'show', {
        text: msgText,
        textVisible: textVisible,
        theme: theme,
        textonly: textonly,
        html: html
        })

    $(document).on 'click', '.hide-page-loading-msg', () ->
      $.mobile.loading( "hide" )

  mediaManager = new VoyageX.MediaManager()

  # photo / video
  localMediaStream = null
  mediaInputVideo = null
  mediaInputImage = null
  mediaInputCanvas = null
  selectedCameraActive = false

  $(document).on 'click', '#switch_camera', (event) ->
    switchCamera()

  $(document).on 'click', '#media_input_init', (event) ->
    $('#media_input_panel_show').click()
    takePhoto()
  
  $(document).on 'click', '#media_input_capture_btn', (event) ->
    snapshot()

  $(document).on 'click', '#media_input_stop_btn', (event) ->
    stopCurrentVideo()
    if $.mobile
      closeMediaInputPanel()

  #openCommentForm = () ->
  #  $("#open_upload_comment_btn").click()

  closeMediaInputPanel = () ->
    $("#media_input_panel").panel("close")
    $('button[value=camera]').focus()
    # reopen panel
    # TODO: which one?
    $('#open_upload_data_btn').click()
    #$('#open_upload_comment_btn').click()

  stopCurrentVideo = () ->
    mediaInputVideo[0].pause()
    localMediaStream.stop() # Doesn't do anything in Chrome.

  snapshot = () ->
    if (localMediaStream) 
      sizeCanvas()
      ctx = mediaInputCanvas[0].getContext('2d')
      ctx.drawImage(mediaInputVideo[0], 0, 0)
      # "image/webp" works in Chrome.
      # Other browsers will fall back to image/png.
      mediaInputImage[0].src = mediaInputCanvas[0].toDataURL('image/webp')
      #mediaInputImage[0].src = mediaInputCanvas[0].toDataURL('image/png')
      #mediaInputImage.attr('src', mediaInputCanvas[0].toDataURL('image/webp'))
      $('#fileupload').attr('value', mediaInputImage[0].src)
      if $.mobile
        closeMediaInputPanel()

  takePhoto = () ->
    if (Modernizr.getusermedia) 
      $('#media_input_container').css('display', 'block')
      gUM = Modernizr.prefixed('getUserMedia', navigator)
      if mediaManager.curSelectedVideoSrcIdx() >= 0
        constraints = mediaManager.constraintsForMediaSource(-1, curSelVidSrcIdx)
      else
        constraints = {video: true}
      gUM(constraints, (stream) ->
          # this is the success-callback
          mediaInputVideo = $('#media_input_capture')
          mediaInputImage = $('#media_input_current')
          mediaInputCanvas = $('#media_input_display')
          mediaInputVideo.attr('src', window.URL.createObjectURL(stream))
          #mediaInputVideo.attr('controls', true)
          #mediaInputVideo.on 'click', () ->
          #    snapshot()
          #  , false
          localMediaStream = stream
          selectedCameraActive = true
          # video.onloadedmetadata not firing in Chrome so we have to hack.
          # See crbug.com/110938.
          setTimeout(() ->
              sizeCanvas()
          , 100)
          # Note: onloadedmetadata doesn't fire in Chrome when using it with getUserMedia.
          # See crbug.com/110938.
          mediaInputVideo[0].onloadedmetadata = (e) ->
            # Ready to go. Do some stuff.
        , errorCallback)

      #$(document).on 'click', '#media_input_capture', () ->
      #video.addEventListener('click', snapshot, false)
    #$('#media_input_init').hide()

  sizeCanvas = () ->
    mediaInputCanvas.attr('width', mediaInputVideo[0].videoWidth)
    mediaInputCanvas.attr('height', mediaInputVideo[0].videoHeight)
    #mediaInputImage.attr('height', mediaInputVideo[0].videoHeight)
    #mediaInputImage.attr('width', mediaInputVideo[0].videoWidth)
  
  errorCallback = (e) ->
    console.log('Reeeejected!', e)
    alert('Reeeejected!')
    if $.mobile
      $("#media_input_panel").panel("close")
      $('button[value=camera]').focus()

